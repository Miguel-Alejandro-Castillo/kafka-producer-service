#FROM node:lts-alpine
#FROM node:20
# Usa una imagen base ligera
#FROM node:20-alpine
FROM node:20-alpine

# Establece el entorno en producción
#ENV NODE_ENV=production
# Establece el entorno en desarrolo
ENV NODE_ENV=development

# copy in our source code last, as it changes the most
#WORKDIR /usr
# Establece el directorio de trabajo
WORKDIR /usr/src/app

#COPY package.json package-lock.json* ./
# Copia los archivos necesarios para instalar dependencias
COPY ["package.json", "package-lock.json*", "npm-shrinkwrap.json*", "./"]

# Use latest version of npm
#RUN npm install npm@latest -g
#RUN npm install --production --silent && mv node_modules ../
#RUN npm install --no-optional && npm cache clean --force
# Instala las dependencias de producción(recomendado)
# npm ci (Clean Install):
# Es un comando diseñado para instalaciones rápidas y confiables en entornos como CI/CD (Integración Continua/Despliegue Continuo) o producción.
#RUN npm ci --omit=dev && npm cache clean --force
RUN npm install  && npm cache clean --force

# Copia el resto del código fuente
COPY . .

#Cambiar los permisos para el usuario node es una buena práctica, especialmente si estás ejecutando el contenedor con un usuario no root.
RUN chown -R node /usr/src/app

#Ejecutar el contenedor como el usuario node es una excelente práctica de seguridad
USER node

# Expone el puerto de la aplicacion
EXPOSE 3000

# Comando para iniciar la aplicación
#CMD ["npm", "start"]
#CMD ["sh", "-c", "npm run ${NODE_ENV:-start}"]
CMD ["npm", "run", "dev"]
